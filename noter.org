#+TITLE:Reactive and event based systems

* 16/11 Intro Lecture
Reactive and event-based systems follow an architechtural style where components react to events
generated by the environment.  
Examples:
- IoT platforms, 
- low-latency websites
- apps

Principles:
- Responsiveness
- Flexibility
- Resiliency
- Adaptability and elasticity
- Scalability

Rebs is also an introduction to Tijs research group. They work closely with industry :)

** Praktisk
- Lectures Monday 10:15-12:00
- Øvetimer Friday 10:15-12:00
  - Hybrid læring
- Reading is article-based

** Assignment
Tijs ass 1 er todelt i A og B  
Contain implementation with relevant technologies  
Reports /should/ contain reflections  
Assignments are mandatory pass/fail with re-handin

** Assignment
- Individual oral exam
- Prepare 8-min presentations for each ass
- One presentation given at random
- Questions on pres as well as curriculum
- Notes and laptop allowed

** Process modelling intro
/Process:/ A series of actions or steps taken in order to achieve a particular end  
- Production of a car
- Treatment for lung cancer
- An algorithm
  
*** How do we model processes?
- Plain text
- Drawings, diagrams

How do we model without Ambiguity?

In comes Formal methods:  
By having a formal way to model processes we get several advantages,
including verification, simulation, unambiguous semantics, etc.

** Automata
Finite state automata. 

Consists of:
- A set of states Q
- An alphabet $\Sigma$
- A transition function $\delta$ s.t $\delta : Q x \Sigma \rightarrow Q$
- A starting state $q_0 \in Q$
- A set of accepting states $F \in Q$

/Traces:/ Sequences of transitions  
/Accepting traces:/ Sequences of transitions leading to accepting states
/Language:/ The set of all traces
/Deadlock:/ A dead state. You're stuck in a non-accepting state
/Livelock:/ You can still do actions, however we can still not reach an accepting state
* 23/11 Process modelling
We need to model processes. We show business standard modelling.

** Declarative process notations
- Are suited to modelling flexible processes
- Focus on modelling constraints instead of flows
- More easily adapted to change
  
*DCR Graphs*
A workflow notation consisting of:
- Events
- Constraints
- State represented as a marking consisting of executed, pending and included

[[dcrgraphs.net]] 
